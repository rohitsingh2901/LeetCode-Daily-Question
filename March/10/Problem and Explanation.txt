349. Intersection of Two Arrays

Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.

 

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.
 

Constraints:

1 <= nums1.length, nums2.length <= 1000
0 <= nums1[i], nums2[i] <= 1000

Explanation:

1. First the function intersection takes two vectors nums1 and nums2 as input.
2. It initializes an unordered map m to store elements from nums1.
3. It iterates through nums1, marking each element as present in the map with a count of 1.
4. It initializes a vector ans to store the intersection elements.
5. It iterates through nums2, checking if each element exists in the map and has a count of 1. If so, it adds the element to the ans vector and decrements its count in the map to avoid duplicates.
6. Finally, it returns the ans vector containing the intersection elements.

- Time complexity of O(N + M), where N and M are the lengths of nums1 and nums2 respectively, due to the loop iterations through both arrays. 
- The space complexity is O(N) for the unordered map m and O(K) for the ans vector, where K is the size of the intersection.