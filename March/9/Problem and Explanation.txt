2540. Minimum Common Value

Given two integer arrays nums1 and nums2, sorted in non-decreasing order, return the minimum integer common to both arrays. If there is no common integer amongst nums1 and nums2, return -1.

Note that an integer is said to be common to nums1 and nums2 if both arrays have at least one occurrence of that integer.

 

Example 1:

Input: nums1 = [1,2,3], nums2 = [2,4]
Output: 2
Explanation: The smallest element common to both arrays is 2, so we return 2.
Example 2:

Input: nums1 = [1,2,3,6], nums2 = [2,3,4,5]
Output: 2
Explanation: There are two common elements in the array 2 and 3 out of which 2 is the smallest, so 2 is returned.
 

Constraints:

1 <= nums1.length, nums2.length <= 105
1 <= nums1[i], nums2[j] <= 109
Both nums1 and nums2 are sorted in non-decreasing order.

Explanation:

1. First initializes two pointers i and j to index the elements of nums1 and nums2, respectively.

2. Then iterates through both arrays simultaneously using a while loop until one of the pointers reaches the end of its respective array.

3. Within the loop:
   - If the element at nums1[i] is equal to the element at nums2[j], it means they have found a common element. In this case, it returns that common element.
   - If the element at nums1[i] is smaller than the element at nums2[j], it increments i to move to the next element in nums1.
   - If the element at nums1[i] is greater than the element at nums2[j], it increments j to move to the next element in nums2.

4. If no common element is found after iterating through both arrays, it returns -1.

5. Time complexity = O(n + m)