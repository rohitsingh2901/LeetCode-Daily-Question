1207. Unique Number of Occurrences
Solved
Easy
Topics
Companies
Hint
Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000




Explanation:

- Step 1: You use an `unordered_map` named `occ` to store the occurrences of each value in the array. The key is the array element, and the value is the count of occurrences.

- Step 2: You iterate through the array using a for loop and update the counts in the `occ` map. If the element `arr[i]` is not in the map, it's initialized to 1; otherwise, its count is incremented.

- Step 3: You create an `unordered_set` named `s` to store unique counts. This set will be used to check if a count has already been encountered.

- Step 4: You iterate through the key-value pairs in the `occ` map using a range-based for loop. For each pair (`e`), you check if the count (`e.second`) is already in the set `s`. If it is, it means the count is not unique, and you return false. Otherwise, you insert the count into the set.

- Step 5: If the loop completes without returning false, it means all counts are unique, and you return true.
