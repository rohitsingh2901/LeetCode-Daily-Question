455. Assign Cookies

Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.

Each child i has a greed factor g[i], which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s[j]. If s[j] >= g[i], we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.

 

Example 1:

Input: g = [1,2,3], s = [1,1]
Output: 1
Explanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. 
And even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.
You need to output 1.





Explanation:

1. Function `findContentChildren`:
   - This function takes two vectors as input parameters: `g` (greed factors of children) and `s` (sizes of cookies).
   - It sorts both vectors in ascending order using the `sort` function from the C++ standard library.
   - It initializes `i` and `j` as indices for `g` and `s` respectively, and `res` as the variable to count the number of content children.

2. Iteration through the sorted vectors:
   - The `while` loop continues until either all children or all cookies have been considered (`i < g.size()` and `j < s.size()`).
   - Inside the loop:
     - If the greed factor of the current child (`g[i]`) is less than or equal to the size of the current cookie (`s[j]`):
       - Increment the `res` counter, indicating that this child can be content with this cookie.
       - Move to the next child (`i++`) and the next cookie (`j++`).
     - If the current cookie's size isn't sufficient to satisfy the child's greed factor:
       - Move to the next cookie (`j++`), as it might satisfy the next child's greed factor.
  
3. Return the result:
   - Once the iteration is complete, the function returns the final count of content children stored in `res`.

This algorithm iterates through the sorted greed factors and cookie sizes, assigning cookies to children in a way that maximizes the number of content children. It follows a greedy strategy, assigning the smallest available cookie that satisfies a child's greed factor, and then moves to the next child and cookie accordingly.