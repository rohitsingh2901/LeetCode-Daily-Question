1481. Least Number of Unique Integers after K Removals

Given an array of integers arr and an integer k. Find the least number of unique integers after removing exactly k elements.

Example 1:

Input: arr = [5,5,4], k = 1
Output: 1
Explanation: Remove the single 4, only 5 is left.
Example 2:
Input: arr = [4,3,1,1,3,3,2], k = 3
Output: 2
Explanation: Remove 4, 2 and either one of the two 1s or three 3s. 1 and 3 will be left.
 

Constraints:

1 <= arr.length <= 10^5
1 <= arr[i] <= 10^9
0 <= k <= arr.length


Explanation:

1. Class Definition: Defines a class named `Solution`.

2. Member Function: Includes a member function named `findLeastNumOfUniqueInts`.

3. Input Parameters: Takes a vector `arr` of integers and an integer `k`.

4. Return Type: Returns an integer representing the least number of unique integers after removing exactly `k` elements.

5. Frequency Counting: Uses an unordered map to count the frequency of each integer in the input array `arr`.

6. Frequency Extraction: Extracts the frequencies from the map and stores them in a separate vector `freq`.

7. Sorting Frequencies: Sorts the `freq` vector in ascending order.

8. Greedy Approach: Iterates through the sorted frequencies. For each frequency `f`, if `k` is greater than or equal to `f`, decrements `k` by `f` and increments the `count` variable (representing the number of frequencies removed). Otherwise, breaks out of the loop.

9. Returning Result: Returns the difference between the size of the `freq` vector and the `count` variable, representing the least number of unique integers after removing exactly `k` elements.
